package main

import (
	"fmt"
	"log"
	"os"
	"os/exec"

	"github.com/tealeg/xlsx"
)

func main() {
	// Loading the test case Excel file
	testCaseFile, err := xlsx.OpenFile("./testcases.xlsx")
	if err != nil {
		log.Fatalf("Failed to open test case file: %v", err)
	}

	// Create a new Excel file for the results
	resultFile := xlsx.NewFile()
	resultSheet, err := resultFile.AddSheet("Results")
	if err != nil {
		log.Fatalf("Failed to add sheet to result file: %v", err)
	}

	// Assuming test cases are in the first sheet and start from the second row
	testCaseSheet := testCaseFile.Sheets[0]

	// Adding header to the result sheet
	row := resultSheet.AddRow()
	cell := row.AddCell()
	cell.Value = "TestCase"
	cell = row.AddCell()
	cell.Value = "Result"

	// Iterate through test cases, skipping the header row
	for i, row := range testCaseSheet.Rows {
		if i == 0 { // Skip header row
			continue
		}

		testCaseName := row.Cells[0].String()
		// Here you'd execute your test based on testCaseName. This example just prints it.
		cmd := exec.Command("echo", fmt.Sprintf("Running Test Case: %s", testCaseName))
		output, err := cmd.CombinedOutput()

		// Prepare result row
		resultRow := resultSheet.AddRow()
		testCaseCell := resultRow.AddCell()
		testCaseCell.Value = testCaseName

		resultCell := resultRow.AddCell()
		if err != nil {
			log.Printf("Error running test case %s: %v\n", testCaseName, err)
			resultCell.Value = "FAILED"
		} else {
			log.Printf("Test case %s output: %s\n", testCaseName, output)
			resultCell.Value = "PASSED"
		}
	}

	// Save the result file
	err = resultFile.Save("./test_result.xlsx")
	if err != nil {
		log.Fatalf("Failed to save result file: %v", err)
	}
	fmt.Println("Test cases executed and results saved to test_result.xlsx")
}
