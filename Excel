package main

import (
	"bufio"
	"fmt"
	"os"
	"regexp"
	"strings"

	"github.com/xuri/excelize/v2"
)

// Ensure or create the directory where the Excel file will be saved.
func ensureDirectory(dirPath string) {
	if _, err := os.Stat(dirPath); os.IsNotExist(err) {
		err := os.MkdirAll(dirPath, 0755) // Adjust permissions as needed
		if err != nil {
			fmt.Printf("Error creating directory: %s\n", err)
			os.Exit(1)
		}
	}
}

// Extract the test name from the function declaration.
func getTestName(functionLine string) (string, bool) {
	re := regexp.MustCompile(`func (Test[\w]+)\(`)
	match := re.FindStringSubmatch(functionLine)
	if len(match) > 1 {
		return match[1], true
	}
	return "", false
}

func main() {
	sourceFilePath := "/home/tcs/sample/ondatra/debug/acl/newcode_test.go"
	outputDirPath := "/home/tcs/sample/ondatra/debug/acl/"
	outputFilePath := outputDirPath + "test_results.xlsx"

	// Ensure the output directory exists
	ensureDirectory(outputDirPath)

	// Open the source Go test file
	file, err := os.Open(sourceFilePath)
	if err != nil {
		fmt.Printf("Failed to open the Go test file: %v\n", err)
		os.Exit(1)
	}
	defer file.Close()

	// Initialize a new Excel file
	excelFile := excelize.NewFile()
	sheetName := "Sheet1"

	// Create header row
	excelFile.SetCellValue(sheetName, "A1", "Test Case")
	excelFile.SetCellValue(sheetName, "B1", "Result")

	scanner := bufio.NewScanner(file)
	row := 2 // Start from the second row; first row is the header

	for scanner.Scan() {
		line := scanner.Text()
		if testName, found := getTestName(line); found {
			// For simplicity, let's assume the result is PASSED. This would be where you implement your logic.
			excelFile.SetCellValue(sheetName, fmt.Sprintf("A%d", row), testName)
			excelFile.SetCellValue(sheetName, fmt.Sprintf("B%d", row), "PASSED")
			row++
		}
	}

	if err := scanner.Err(); err != nil {
		fmt.Printf("Error while reading the file: %v\n", err)
		os.Exit(1)
	}

	// Save the Excel file
	if err := excelFile.SaveAs(outputFilePath); err != nil {
		fmt.Printf("Failed to save the Excel file: %v\n", err)
		os.Exit(1)
	}

	fmt.Println("Excel file has been successfully saved.")
}
