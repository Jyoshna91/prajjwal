func TestAclMultipleRulesDevices(t *testing.T) {
    testCases := []struct {
        Name         string
        DeviceIP     string
        ACLName      string
        Rule         string
        Bound        string
        Interface    string
        PingIP       string
        ExpectedFail bool // This flag could be used if you expect the test to fail
    }{
        {"ACL With Multiple Rules - Device 1", "10.133.35.148", "acltemp", "permit icmp 192.168.10.1/24 any", "in", "Ethernet1/1", "192.168.10.2", false},
        {"ACL With Multiple Rules - Device 2", "10.133.35.150", "acltemp", "deny icmp 192.168.10.2/24 any", "in", "Ethernet1/1", "192.168.10.3", false},
        {"ACL With Multiple Rules - Device 3", "10.133.35.152", "acltemp", "deny icmp 192.168.5.2/24 any", "in", "Ethernet1/5", "192.168.5.3", false},
    }

    for _, tc := range testCases {
        t.Run(tc.Name, func(t *testing.T) {
            err := ACLWithMultipleRules(tc.DeviceIP, tc.ACLName, tc.Rule, tc.Bound, tc.Interface, tc.PingIP)
            if (err != nil) != tc.ExpectedFail {
                t.Errorf("Test '%s' failed: %v", tc.Name, err)
                testResults[tc.Name] = "FAILED"
            } else {
                testResults[tc.Name] = "PASSED"
            }
        })
    }
}
