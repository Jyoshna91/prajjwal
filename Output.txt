package main

import (
    "bufio"
    "fmt"
    "os"
    "os/exec"
    "log"
)

func main() {
    // Define the filename where to save the output
    outputFilename := "test_output.txt"

    // Prepare the command "go test -v validcopy_test.go"
    cmd := exec.Command("go", "test", "-v", "validcopy_test.go")

    // Get the combined stdout and stderr pipe
    cmdOutput, err := cmd.StdoutPipe()
    if err != nil {
        log.Fatalf("Error obtaining stdout pipe: %v", err)
    }
    cmd.Stderr = cmd.Stdout // Redirect stderr to the same pipe

    // Start the command
    if err := cmd.Start(); err != nil {
        log.Fatalf("Error starting command: %v", err)
    }

    // Open or create the file
    outputFile, err := os.Create(outputFilename)
    if err != nil {
        log.Fatalf("Error opening outputFile: %v", err)
    }
    defer outputFile.Close()

    // Create a scanner to read the output line by line
    scanner := bufio.NewScanner(cmdOutput)
    for scanner.Scan() {
        line := scanner.Text()
        fmt.Println(line) // Write to stdout
        fmt.Fprintln(outputFile, line) // Write to file
    }

    // Check for any errors during scanning
    if err := scanner.Err(); err != nil {
        log.Fatalf("Error reading command output: %v", err)
    }

    // Wait for the command to finish
    if err := cmd.Wait(); err != nil {
        log.Fatalf("Command finished with error: %v", err)
    }
}
